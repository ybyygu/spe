// [[file:~/Workspace/Programming/spe/spe.note::a6e3127a-638e-43ed-8e96-b6570fdf0a3a][a6e3127a-638e-43ed-8e96-b6570fdf0a3a]]
#[macro_use]
extern crate approx;

extern crate spe;

use spe::{euclidean_distance, pspe};

#[test]
fn test_spe() {
    // distance matrix of the C6H6 molecule
    let distmat = [[ 0.        ,  1.39516   ,  2.41620516,  2.7900648 ,  2.41618259,
                    1.39482907,  1.09961031,  2.16541367,  3.41322918,  3.8897448 ,
                    3.41305482,  2.16536546],
                  [ 1.39516   ,  0.        ,  1.39471206,  2.4162603 ,  2.789946  ,
                    2.41618263,  2.16555254,  1.0996553 ,  2.16537495,  3.41302399,
                    3.88970693,  3.41312833],
                  [ 2.41620516,  1.39471206,  0.        ,  1.39542701,  2.41635607,
                    2.79008009,  3.41298593,  2.16533027,  1.09968019,  2.16567803,
                    3.41350601,  3.88968412],
                  [ 2.7900648 ,  2.4162603 ,  1.39542701,  0.        ,  1.39482508,
                    2.41623613,  3.88967511,  3.41331575,  2.16580551,  1.09968011,
                    2.16552798,  3.41299922],
                  [ 2.41618259,  2.789946  ,  2.41635607,  1.39482508,  0.        ,
                    1.39513795,  3.41310208,  3.88960112,  3.41320913,  2.16560552,
                    1.09976099,  2.16547132],
                  [ 1.39482907,  2.41618263,  2.79008009,  2.41623613,  1.39513795,
                    0.        ,  2.16533131,  3.41293787,  3.88976023,  3.41334401,
                    2.16551563,  1.09960403],
                  [ 1.09961031,  2.16555254,  3.41298593,  3.88967511,  3.41310208,
                    2.16533131,  0.        ,  2.49442716,  4.32085972,  4.98935509,
                    4.3207811 ,  2.49464095],
                  [ 2.16541367,  1.0996553 ,  2.16533027,  3.41331575,  3.88960112,
                    3.41293787,  2.49442716,  0.        ,  2.49476791,  4.3209168 ,
                    4.98936205,  4.32070398],
                  [ 3.41322918,  2.16537495,  1.09968019,  2.16580551,  3.41320913,
                    3.88976023,  4.32085972,  2.49476791,  0.        ,  2.49467797,
                    4.32122765,  4.98936424],
                  [ 3.8897448 ,  3.41302399,  2.16567803,  1.09968011,  2.16560552,
                    3.41334401,  4.98935509,  4.3209168 ,  2.49467797,  0.        ,
                    2.49514738,  4.32098827],
                  [ 3.41305482,  3.88970693,  3.41350601,  2.16552798,  1.09976099,
                    2.16551563,  4.3207811 ,  4.98936205,  4.32122765,  2.49514738,
                    0.        ,  2.49442028],
                  [ 2.16536546,  3.41312833,  3.88968412,  3.41299922,  2.16547132,
                    1.09960403,  2.49464095,  4.32070398,  4.98936424,  4.32098827,
                    2.49442028,  0.        ]];

    let mut bounds = vec![];
    for &d in distmat.iter() {
        bounds.push(d.to_vec());
    }

    // distorted C6H6
    let points = [
        [-2.2203263 ,  0.80248866,  0.78046239],
        [ 0.37292594, -0.90220077, -0.33186774],
        [ 1.19752685,  2.00356725,  1.70886482],
        [-0.33280594,  4.92307855,  0.55724929],
        [-1.24969403,  2.62336272, -0.03597137],
        [-1.76412916,  1.64944998,  1.04899857],
        [-0.34700832,  0.54576556, -0.91323896],
        [ 2.5054478 ,  0.11927592, -0.04573989],
        [ 1.00904816,  2.89392202, -1.08954431],
        [-1.14692507,  4.67268336, -0.14061262],
        [-1.9495841 ,  4.95705708,  0.90390068],
        [-4.28969549,  1.23695303,  0.69208081]
    ];
    let mut points = points.to_vec();

    let maxcycle = 500;
    let maxstep = 100;
    let maxlam = 1.0;
    let minlam = 0.01;
    pspe(&mut points, &bounds, maxcycle, maxstep, maxlam, minlam);
    for i in 0..points.len() {
        for j in 0..points.len() {
            if i != j {
                let pi = points[i];
                let pj = points[j];
                let dij = euclidean_distance(pi, pj);
                let rij = distmat[i][j];
                assert_relative_eq!(dij, rij, epsilon=0.05);
            }
        }
    }
}
// a6e3127a-638e-43ed-8e96-b6570fdf0a3a ends here
